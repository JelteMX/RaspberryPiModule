// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package raspberrypi.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.pi4j.io.gpio.GpioController;
import com.pi4j.io.gpio.GpioFactory;
import com.pi4j.io.gpio.GpioPin;
import com.pi4j.io.gpio.Pin;
import raspberrypi.RaspberryPi;

public class UnprovisionGPIO extends CustomJavaAction<java.lang.Boolean>
{
	private raspberrypi.proxies.Raspberry_GPIO_Port PortNumber;

	public UnprovisionGPIO(IContext context, java.lang.String PortNumber)
	{
		super(context);
		this.PortNumber = PortNumber == null ? null : raspberrypi.proxies.Raspberry_GPIO_Port.valueOf(PortNumber);
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		if (this.PortNumber == null) {
			throw new IllegalArgumentException("Port Number is needed");
		}
		final GpioController gpio = GpioFactory.getInstance();
		final Pin pin = RaspberryPi.getRaspberryPiPin(this.PortNumber);

		final GpioPin gpioPin = gpio.getProvisionedPin(pin);
		
		if (gpioPin != null) {
			gpio.unprovisionPin(gpioPin);
			gpio.shutdown();
			return true;
		}
		
		gpio.shutdown();
		return false;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "UnprovisionGPIO";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
